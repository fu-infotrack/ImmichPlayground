// <auto-generated/>
#pragma warning disable CS0618
using Immich.Client.Search.Cities;
using Immich.Client.Search.Explore;
using Immich.Client.Search.LargeAssets;
using Immich.Client.Search.Metadata;
using Immich.Client.Search.Person;
using Immich.Client.Search.Places;
using Immich.Client.Search.RandomNamespace;
using Immich.Client.Search.Smart;
using Immich.Client.Search.Statistics;
using Immich.Client.Search.Suggestions;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Immich.Client.Search
{
    /// <summary>
    /// Builds and executes requests for operations under \search
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SearchRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The cities property</summary>
        public global::Immich.Client.Search.Cities.CitiesRequestBuilder Cities
        {
            get => new global::Immich.Client.Search.Cities.CitiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The explore property</summary>
        public global::Immich.Client.Search.Explore.ExploreRequestBuilder Explore
        {
            get => new global::Immich.Client.Search.Explore.ExploreRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The largeAssets property</summary>
        public global::Immich.Client.Search.LargeAssets.LargeAssetsRequestBuilder LargeAssets
        {
            get => new global::Immich.Client.Search.LargeAssets.LargeAssetsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The metadata property</summary>
        public global::Immich.Client.Search.Metadata.MetadataRequestBuilder Metadata
        {
            get => new global::Immich.Client.Search.Metadata.MetadataRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The person property</summary>
        public global::Immich.Client.Search.Person.PersonRequestBuilder Person
        {
            get => new global::Immich.Client.Search.Person.PersonRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The places property</summary>
        public global::Immich.Client.Search.Places.PlacesRequestBuilder Places
        {
            get => new global::Immich.Client.Search.Places.PlacesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The random property</summary>
        public global::Immich.Client.Search.RandomNamespace.RandomRequestBuilder Random
        {
            get => new global::Immich.Client.Search.RandomNamespace.RandomRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The smart property</summary>
        public global::Immich.Client.Search.Smart.SmartRequestBuilder Smart
        {
            get => new global::Immich.Client.Search.Smart.SmartRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The statistics property</summary>
        public global::Immich.Client.Search.Statistics.StatisticsRequestBuilder Statistics
        {
            get => new global::Immich.Client.Search.Statistics.StatisticsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The suggestions property</summary>
        public global::Immich.Client.Search.Suggestions.SuggestionsRequestBuilder Suggestions
        {
            get => new global::Immich.Client.Search.Suggestions.SuggestionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Client.Search.SearchRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SearchRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/search", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Client.Search.SearchRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SearchRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/search", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618

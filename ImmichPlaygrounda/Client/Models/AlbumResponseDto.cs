// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Immich.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AlbumResponseDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The albumName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AlbumName { get; set; }
#nullable restore
#else
        public string AlbumName { get; set; }
#endif
        /// <summary>The albumThumbnailAssetId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AlbumThumbnailAssetId { get; set; }
#nullable restore
#else
        public string AlbumThumbnailAssetId { get; set; }
#endif
        /// <summary>The albumUsers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Immich.Client.Models.AlbumUserResponseDto>? AlbumUsers { get; set; }
#nullable restore
#else
        public List<global::Immich.Client.Models.AlbumUserResponseDto> AlbumUsers { get; set; }
#endif
        /// <summary>The assetCount property</summary>
        public int? AssetCount { get; set; }
        /// <summary>The assets property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Immich.Client.Models.AssetResponseDto>? Assets { get; set; }
#nullable restore
#else
        public List<global::Immich.Client.Models.AssetResponseDto> Assets { get; set; }
#endif
        /// <summary>The createdAt property</summary>
        public DateTimeOffset? CreatedAt { get; set; }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The endDate property</summary>
        public DateTimeOffset? EndDate { get; set; }
        /// <summary>The hasSharedLink property</summary>
        public bool? HasSharedLink { get; set; }
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The isActivityEnabled property</summary>
        public bool? IsActivityEnabled { get; set; }
        /// <summary>The lastModifiedAssetTimestamp property</summary>
        public DateTimeOffset? LastModifiedAssetTimestamp { get; set; }
        /// <summary>The order property</summary>
        public global::Immich.Client.Models.AssetOrder? Order { get; set; }
        /// <summary>The owner property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Immich.Client.Models.UserResponseDto? Owner { get; set; }
#nullable restore
#else
        public global::Immich.Client.Models.UserResponseDto Owner { get; set; }
#endif
        /// <summary>The ownerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OwnerId { get; set; }
#nullable restore
#else
        public string OwnerId { get; set; }
#endif
        /// <summary>The shared property</summary>
        public bool? Shared { get; set; }
        /// <summary>The startDate property</summary>
        public DateTimeOffset? StartDate { get; set; }
        /// <summary>The updatedAt property</summary>
        public DateTimeOffset? UpdatedAt { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Client.Models.AlbumResponseDto"/> and sets the default values.
        /// </summary>
        public AlbumResponseDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Immich.Client.Models.AlbumResponseDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Immich.Client.Models.AlbumResponseDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Immich.Client.Models.AlbumResponseDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "albumName", n => { AlbumName = n.GetStringValue(); } },
                { "albumThumbnailAssetId", n => { AlbumThumbnailAssetId = n.GetStringValue(); } },
                { "albumUsers", n => { AlbumUsers = n.GetCollectionOfObjectValues<global::Immich.Client.Models.AlbumUserResponseDto>(global::Immich.Client.Models.AlbumUserResponseDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "assetCount", n => { AssetCount = n.GetIntValue(); } },
                { "assets", n => { Assets = n.GetCollectionOfObjectValues<global::Immich.Client.Models.AssetResponseDto>(global::Immich.Client.Models.AssetResponseDto.CreateFromDiscriminatorValue)?.AsList(); } },
                { "createdAt", n => { CreatedAt = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "endDate", n => { EndDate = n.GetDateTimeOffsetValue(); } },
                { "hasSharedLink", n => { HasSharedLink = n.GetBoolValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "isActivityEnabled", n => { IsActivityEnabled = n.GetBoolValue(); } },
                { "lastModifiedAssetTimestamp", n => { LastModifiedAssetTimestamp = n.GetDateTimeOffsetValue(); } },
                { "order", n => { Order = n.GetEnumValue<global::Immich.Client.Models.AssetOrder>(); } },
                { "owner", n => { Owner = n.GetObjectValue<global::Immich.Client.Models.UserResponseDto>(global::Immich.Client.Models.UserResponseDto.CreateFromDiscriminatorValue); } },
                { "ownerId", n => { OwnerId = n.GetStringValue(); } },
                { "shared", n => { Shared = n.GetBoolValue(); } },
                { "startDate", n => { StartDate = n.GetDateTimeOffsetValue(); } },
                { "updatedAt", n => { UpdatedAt = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("albumName", AlbumName);
            writer.WriteStringValue("albumThumbnailAssetId", AlbumThumbnailAssetId);
            writer.WriteCollectionOfObjectValues<global::Immich.Client.Models.AlbumUserResponseDto>("albumUsers", AlbumUsers);
            writer.WriteIntValue("assetCount", AssetCount);
            writer.WriteCollectionOfObjectValues<global::Immich.Client.Models.AssetResponseDto>("assets", Assets);
            writer.WriteDateTimeOffsetValue("createdAt", CreatedAt);
            writer.WriteStringValue("description", Description);
            writer.WriteDateTimeOffsetValue("endDate", EndDate);
            writer.WriteBoolValue("hasSharedLink", HasSharedLink);
            writer.WriteStringValue("id", Id);
            writer.WriteBoolValue("isActivityEnabled", IsActivityEnabled);
            writer.WriteDateTimeOffsetValue("lastModifiedAssetTimestamp", LastModifiedAssetTimestamp);
            writer.WriteEnumValue<global::Immich.Client.Models.AssetOrder>("order", Order);
            writer.WriteObjectValue<global::Immich.Client.Models.UserResponseDto>("owner", Owner);
            writer.WriteStringValue("ownerId", OwnerId);
            writer.WriteBoolValue("shared", Shared);
            writer.WriteDateTimeOffsetValue("startDate", StartDate);
            writer.WriteDateTimeOffsetValue("updatedAt", UpdatedAt);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

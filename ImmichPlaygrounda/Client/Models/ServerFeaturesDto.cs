// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Immich.Client.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ServerFeaturesDto : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The configFile property</summary>
        public bool? ConfigFile { get; set; }
        /// <summary>The duplicateDetection property</summary>
        public bool? DuplicateDetection { get; set; }
        /// <summary>The email property</summary>
        public bool? Email { get; set; }
        /// <summary>The facialRecognition property</summary>
        public bool? FacialRecognition { get; set; }
        /// <summary>The importFaces property</summary>
        public bool? ImportFaces { get; set; }
        /// <summary>The map property</summary>
        public bool? Map { get; set; }
        /// <summary>The oauth property</summary>
        public bool? Oauth { get; set; }
        /// <summary>The oauthAutoLaunch property</summary>
        public bool? OauthAutoLaunch { get; set; }
        /// <summary>The passwordLogin property</summary>
        public bool? PasswordLogin { get; set; }
        /// <summary>The reverseGeocoding property</summary>
        public bool? ReverseGeocoding { get; set; }
        /// <summary>The search property</summary>
        public bool? Search { get; set; }
        /// <summary>The sidecar property</summary>
        public bool? Sidecar { get; set; }
        /// <summary>The smartSearch property</summary>
        public bool? SmartSearch { get; set; }
        /// <summary>The trash property</summary>
        public bool? Trash { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Client.Models.ServerFeaturesDto"/> and sets the default values.
        /// </summary>
        public ServerFeaturesDto()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Immich.Client.Models.ServerFeaturesDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Immich.Client.Models.ServerFeaturesDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Immich.Client.Models.ServerFeaturesDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "configFile", n => { ConfigFile = n.GetBoolValue(); } },
                { "duplicateDetection", n => { DuplicateDetection = n.GetBoolValue(); } },
                { "email", n => { Email = n.GetBoolValue(); } },
                { "facialRecognition", n => { FacialRecognition = n.GetBoolValue(); } },
                { "importFaces", n => { ImportFaces = n.GetBoolValue(); } },
                { "map", n => { Map = n.GetBoolValue(); } },
                { "oauth", n => { Oauth = n.GetBoolValue(); } },
                { "oauthAutoLaunch", n => { OauthAutoLaunch = n.GetBoolValue(); } },
                { "passwordLogin", n => { PasswordLogin = n.GetBoolValue(); } },
                { "reverseGeocoding", n => { ReverseGeocoding = n.GetBoolValue(); } },
                { "search", n => { Search = n.GetBoolValue(); } },
                { "sidecar", n => { Sidecar = n.GetBoolValue(); } },
                { "smartSearch", n => { SmartSearch = n.GetBoolValue(); } },
                { "trash", n => { Trash = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("configFile", ConfigFile);
            writer.WriteBoolValue("duplicateDetection", DuplicateDetection);
            writer.WriteBoolValue("email", Email);
            writer.WriteBoolValue("facialRecognition", FacialRecognition);
            writer.WriteBoolValue("importFaces", ImportFaces);
            writer.WriteBoolValue("map", Map);
            writer.WriteBoolValue("oauth", Oauth);
            writer.WriteBoolValue("oauthAutoLaunch", OauthAutoLaunch);
            writer.WriteBoolValue("passwordLogin", PasswordLogin);
            writer.WriteBoolValue("reverseGeocoding", ReverseGeocoding);
            writer.WriteBoolValue("search", Search);
            writer.WriteBoolValue("sidecar", Sidecar);
            writer.WriteBoolValue("smartSearch", SmartSearch);
            writer.WriteBoolValue("trash", Trash);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618

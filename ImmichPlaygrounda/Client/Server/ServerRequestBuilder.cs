// <auto-generated/>
#pragma warning disable CS0618
using Immich.Client.Server.About;
using Immich.Client.Server.ApkLinks;
using Immich.Client.Server.Config;
using Immich.Client.Server.Features;
using Immich.Client.Server.License;
using Immich.Client.Server.MediaTypes;
using Immich.Client.Server.Ping;
using Immich.Client.Server.Statistics;
using Immich.Client.Server.Storage;
using Immich.Client.Server.Theme;
using Immich.Client.Server.VersionCheck;
using Immich.Client.Server.VersionHistory;
using Immich.Client.Server.VersionNamespace;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Immich.Client.Server
{
    /// <summary>
    /// Builds and executes requests for operations under \server
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ServerRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The about property</summary>
        public global::Immich.Client.Server.About.AboutRequestBuilder About
        {
            get => new global::Immich.Client.Server.About.AboutRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The apkLinks property</summary>
        public global::Immich.Client.Server.ApkLinks.ApkLinksRequestBuilder ApkLinks
        {
            get => new global::Immich.Client.Server.ApkLinks.ApkLinksRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The config property</summary>
        public global::Immich.Client.Server.Config.ConfigRequestBuilder Config
        {
            get => new global::Immich.Client.Server.Config.ConfigRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The features property</summary>
        public global::Immich.Client.Server.Features.FeaturesRequestBuilder Features
        {
            get => new global::Immich.Client.Server.Features.FeaturesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The license property</summary>
        public global::Immich.Client.Server.License.LicenseRequestBuilder License
        {
            get => new global::Immich.Client.Server.License.LicenseRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The mediaTypes property</summary>
        public global::Immich.Client.Server.MediaTypes.MediaTypesRequestBuilder MediaTypes
        {
            get => new global::Immich.Client.Server.MediaTypes.MediaTypesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ping property</summary>
        public global::Immich.Client.Server.Ping.PingRequestBuilder Ping
        {
            get => new global::Immich.Client.Server.Ping.PingRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The statistics property</summary>
        public global::Immich.Client.Server.Statistics.StatisticsRequestBuilder Statistics
        {
            get => new global::Immich.Client.Server.Statistics.StatisticsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The storage property</summary>
        public global::Immich.Client.Server.Storage.StorageRequestBuilder Storage
        {
            get => new global::Immich.Client.Server.Storage.StorageRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The theme property</summary>
        public global::Immich.Client.Server.Theme.ThemeRequestBuilder Theme
        {
            get => new global::Immich.Client.Server.Theme.ThemeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The version property</summary>
        public global::Immich.Client.Server.VersionNamespace.VersionRequestBuilder Version
        {
            get => new global::Immich.Client.Server.VersionNamespace.VersionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The versionCheck property</summary>
        public global::Immich.Client.Server.VersionCheck.VersionCheckRequestBuilder VersionCheck
        {
            get => new global::Immich.Client.Server.VersionCheck.VersionCheckRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The versionHistory property</summary>
        public global::Immich.Client.Server.VersionHistory.VersionHistoryRequestBuilder VersionHistory
        {
            get => new global::Immich.Client.Server.VersionHistory.VersionHistoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Client.Server.ServerRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ServerRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/server", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Client.Server.ServerRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ServerRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/server", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618

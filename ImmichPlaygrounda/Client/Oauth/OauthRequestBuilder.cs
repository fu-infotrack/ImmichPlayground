// <auto-generated/>
#pragma warning disable CS0618
using Immich.Client.Oauth.Authorize;
using Immich.Client.Oauth.Callback;
using Immich.Client.Oauth.Link;
using Immich.Client.Oauth.MobileRedirect;
using Immich.Client.Oauth.Unlink;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace Immich.Client.Oauth
{
    /// <summary>
    /// Builds and executes requests for operations under \oauth
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class OauthRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The authorize property</summary>
        public global::Immich.Client.Oauth.Authorize.AuthorizeRequestBuilder Authorize
        {
            get => new global::Immich.Client.Oauth.Authorize.AuthorizeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The callback property</summary>
        public global::Immich.Client.Oauth.Callback.CallbackRequestBuilder Callback
        {
            get => new global::Immich.Client.Oauth.Callback.CallbackRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The link property</summary>
        public global::Immich.Client.Oauth.Link.LinkRequestBuilder Link
        {
            get => new global::Immich.Client.Oauth.Link.LinkRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The mobileRedirect property</summary>
        public global::Immich.Client.Oauth.MobileRedirect.MobileRedirectRequestBuilder MobileRedirect
        {
            get => new global::Immich.Client.Oauth.MobileRedirect.MobileRedirectRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The unlink property</summary>
        public global::Immich.Client.Oauth.Unlink.UnlinkRequestBuilder Unlink
        {
            get => new global::Immich.Client.Oauth.Unlink.UnlinkRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Client.Oauth.OauthRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OauthRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/oauth", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Immich.Client.Oauth.OauthRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public OauthRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/oauth", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
